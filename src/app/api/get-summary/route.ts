
import { db } from '@/lib/db';
import {  messages as _messages, summary as _summary } from '@/lib/db/schema';
import { eq } from 'drizzle-orm';
import { NextResponse } from 'next/server';




export async function POST(req: Request) {
    try {
        // Parse the request body to get the messages array
        const { chatId} = await req.json();
        const summary = await db.select().from(_summary).where(eq(_summary.chatId, chatId));
        // If the summary exists, return it in the expected format
        if (summary.length > 0) {
            // Structure the content as a Message object
            const responseMessages = [{
                id: `${chatId}-summary`, // Unique ID for the message
                role: 'assistant', // Assuming the summary is generated by the assistant
                content: summary[0].content, // Summary content
            }];

            // Return the response as JSON
            return NextResponse.json({ messages: responseMessages });
            // return summary.toDataStreamResponse();

        } else{
            return NextResponse.json({messages: []}, {status: 200});
        }
         
    } catch (error) {
        console.error("Error processing request:", error);
        return new Response(JSON.stringify({ error: 'Failed to process request' }), {
            status: 500,
            headers: {
                'Content-Type': 'application/json',
            },
        });
    }
}
